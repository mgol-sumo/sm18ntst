{"version":3,"sources":["App.tsx","i18n/icp.orig.en.i18n.ts","i18n/icp.icu.en.i18n.ts","i18n/traceDetails.orig.en.i18n.ts","i18n/traceDetails.icu.en.i18n.ts","index.tsx","utils.tsx"],"names":["App","className","id","values","count","b","param","numberOfKeys","joinedKeys","alertTitle","headings","triggeredQuery","logsTable","metricsTable","signals","description","title","none","open","refresh","loading","error","partialError","anomalies","subTitle","summaryTitle","logFluctuations","summary","messages","type","new","gone","diff","dimensionalExplanations","distributionRemaining","distributionTooltip","gisBenchmarks","openInQueries","newTabTitle","insightTypeValue","Critical","Warning","MissingData","triggerValue","created","duration","insightStatusValue","Triggered","Resolved","openMonitor","historyTab","openInNewTab","currentlyViewing","link","copy","copiedToClipboard","notes","openButton","closeButton","stateOverlayNoContent","resolveAction","resolve","resolved","resolving","dialogTitle","dialogMessage","success","openTriggeredQuery","button","errors","nothingToSee","itemFetchError","error5xx","itemNotFound","itemCouldNotBeRetrieved","itemNoLongerAvailable","retry","associatedIncidents","related","history","lastReport","medianDuration","noMonitorActivityFor30Days","noMonitorActivityOnSelectedDate","frequency","showingAlerts","alertsNumber","durationTriggered","forAlert","visualization","startTimeLabel","visualizationStateOverlayContent","noContent","queryCancelledError","networkError","logQueryPreview","table","time","message","lastUpdated","thresholdIndicator","summaryTab","details","drillDownQuery","AllLogs","ErrorLogs","ErrorLogsWithLogReduce","associatedLogs","associatedLogsInfo","associatedLogsError","associatedLogsNoResults","line1","line2","line3","alertListTable","columnNames","name","severity","status","entities","violations","lastViolation","placeholder","summaryLabel","contextMenu","copyLink","alertResolved","getSummaryTweaked","getKeys","i18n","sidePanel","metadata","noErrorTitle","noErrorDescription","spanId","traceId","service","application","operation","kind","parentSpan","relativeStartTime","startTime","endTime","noMetadataTitle","noMetadataDescription","errorTitle","errorDescription","criticalPathContribution","httpMethod","httpUrl","httpStatusCode","dbType","dbInstance","dbStatement","messageBusDestination","logs","events","logsSectionInfo","logsSectionInfoLine1","logsSectionInfoLine2","logsSectionInfoLine3","learn","entityInspectorLogsLink","textCopiedToClipboard","metadataGroups","k8s","sumo","others","copyToClipboardIconTooltip","filterSpansIconTooltip","remoteSpan","approximate","remoteSpanInfo","servicesContribution","spans","clickToShowSpans","clickToHideSpans","otherServices","hideAll","showAll","spansFiltering","selectorLabel","filterSelectorHintText","applyFiltersBtn","tracingFields","otherFields","errorSpansOnlyToggle","hasUpdates","operationNameForClientKind","operationNameForRemoteSpan","openTaggedLogs","drillDownTitle","spansNumberForTagNameAggregation","valuesNumberForTagNameAggregation","spansNumberForTagNameAndValueAggregation","totalNumberOfSpans","numberOfDisplayedSpans","tooltipMessageSpansLimitExceeded","ReactDOM","render","StrictMode","locale","flattenMessages","nestedMessages","prefix","Object","keys","reduce","key","value","prefixedKey","assign","create","icpOrigEnI18n","icpIcuEnI18n","traceDetailsOrigEnI18n","traceDetailsIcuEnI18n","document","getElementById"],"mappings":"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","file":"static/js/main.501e1809.chunk.js","sourcesContent":["import './App.css';\nimport { FormattedMessage } from 'react-intl';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      Example messages:\n      <ul>\n        <li>\n          <FormattedMessage\n            id={'traceDetailsIcuEnI18n.servicesContribution.title'}\n          />\n        </li>\n        <li>\n          <FormattedMessage\n            id={\n              'traceDetailsIcuEnI18n.spansFiltering.spansNumberForTagNameAggregation'\n            }\n            values={{ count: 42, b: (param: 'string') => <b>{param}</b> }}\n          />\n        </li>\n        <li>\n          <FormattedMessage\n            id={'icpIcuEnI18n.signals.dimensionalExplanations.getKeys'}\n            values={{ count: 6 }}\n          />\n        </li>\n        <li>\n          <FormattedMessage\n            id={\n              'icpIcuEnI18n.signals.dimensionalExplanations.getSummaryTweaked'\n            }\n            values={{ numberOfKeys: 3, joinedKeys: 'a, b and c' }}\n          />\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","export default {\n  alertTitle: `Alert %s`,\n  headings: {\n    triggeredQuery: 'Triggered Query',\n    logsTable: 'Log Messages',\n    metricsTable: 'Time Series',\n    signals: 'Alert Context',\n  },\n  description: {\n    title: 'Description',\n    none: 'None',\n  },\n  open: 'Open',\n  refresh: 'Refresh',\n  signals: {\n    loading: 'Loading',\n    error: {\n      title: 'No context cards available',\n      description: 'We haven’t found any context cards for this alert.',\n      partialError: 'One or more context cards failed to load.',\n    },\n    anomalies: {\n      title: 'Anomalies',\n      subTitle: 'Events of interest that are related to this alert',\n      summaryTitle: 'Entity Information',\n    },\n    logFluctuations: {\n      title: 'Log Fluctuations',\n      subTitle: 'Comparing log activity for this alert between time ranges',\n      summaryTitle: 'Summary Description',\n      summary:\n        'Query results from %(startTime)s compared to results from %(timeRange)s earlier.',\n      messages: '%s messages',\n      type: {\n        new: 'NEW',\n        gone: 'GONE',\n        diff: 'DIFF',\n      },\n    },\n    dimensionalExplanations: {\n      title: 'Dimensional Explanations',\n      subTitle:\n        'Most common key-value pairs found in the triggered query results',\n      summaryTitle: 'Summary Description',\n      // getSummary: (keys: string[]): string => {\n      //   let joinedKeys = keys.slice(0, -1).join(', ');\n      //   if (keys.length > 1) {\n      //     joinedKeys += ' and';\n      //   }\n      //   joinedKeys += ` ${keys[keys.length - 1]}`;\n      //   return `Key combination${\n      //     keys.length === 1 ? '' : 's'\n      //   } ${joinedKeys} occur${\n      //     keys.length === 1 ? 's' : ''\n      //   } more often in these alert results than all other results`;\n      // },\n      distributionRemaining: '%s (remaining)',\n      distributionTooltip:\n        'These key-value pairs occur in %(testCoverage)s of the messages in your alert results, and %(controlCoverage)s of all other messages in your log files.',\n      // getKeys: (count: number) => `${count} key${count === 1 ? '' : 's'}`,\n    },\n    gisBenchmarks: {\n      title: 'Benchmark',\n      subTitle: 'Comparative metrics',\n      summaryTitle: 'Entity Information',\n      summary: '%(entityDisplayName)s has %(deviationCount)s deviations.',\n    },\n    openInQueries: {\n      newTabTitle: 'DrillDown from Incident %s',\n    },\n  },\n  insightTypeValue: {\n    Critical: 'Critical',\n    Warning: 'Warning',\n    MissingData: 'Missing Data',\n  },\n  id: 'ID',\n  triggerValue: 'Trigger Value',\n  created: 'Created',\n  duration: 'Duration',\n  insightStatusValue: {\n    Triggered: 'Active',\n    Resolved: 'Resolved',\n  },\n  openMonitor: 'Open Monitor',\n  historyTab: {\n    openInNewTab: 'Open in a new tab',\n    currentlyViewing: 'Currently viewing this alert',\n  },\n  link: {\n    copy: 'Copy Link',\n    copiedToClipboard: 'Link copied to clipboard',\n  },\n  notes: {\n    openButton: 'View Playbook',\n    closeButton: 'Close Playbook',\n    title: 'Playbook',\n    stateOverlayNoContent: {\n      title: 'No data to display',\n      description: 'A playbook has not been included with this monitor',\n    },\n  },\n  resolveAction: {\n    resolve: 'Resolve',\n    resolved: 'Resolved',\n    resolving: 'Resolving...',\n    dialogTitle: 'Resolve alert?',\n    dialogMessage: 'This action cannot be undone',\n    success: 'Alert resolved successfully',\n    error: 'Error occurred when resolving the alert',\n  },\n  openTriggeredQuery: {\n    button: 'Open Triggered Query',\n    newTabTitle: 'DrillDown from Alert %s',\n  },\n  errors: {\n    nothingToSee: 'Nothing to see here',\n    itemFetchError: 'Error',\n    error5xx: 'Error 5xx - could not load page',\n    itemNotFound: 'Alert with the given identifier could not be found',\n    itemCouldNotBeRetrieved: 'This item could not be retrieved',\n    itemNoLongerAvailable: 'Alerts older than %s days cannot be viewed',\n    retry: 'Retry',\n  },\n  associatedIncidents: {\n    related: 'Related Alerts',\n    history: 'Monitor History',\n    open: 'Open',\n    lastReport: 'Last report: ',\n    // numberOfAlerts: (alerts: number) =>\n    //   `${alerts} alert${alerts === 1 ? '' : 's'}`,\n    // lastNumberOfAlerts: (alerts: number) =>\n    //   `Last ${alerts} alert${alerts === 1 ? '' : 's'}`,\n    medianDuration: 'Median Duration',\n    noMonitorActivityFor30Days:\n      'There is no monitor activity for the past 30 days.',\n    noMonitorActivityOnSelectedDate:\n      'There was no monitor activity on selected date.',\n    frequency: 'Frequency',\n    showingAlerts: 'Showing %(numberOfAlerts)s alerts for %(date)s',\n    alertsNumber: '%s alerts',\n    durationTriggered: '%(duration)s duration, triggered %(triggeredAt)s',\n    forAlert: 'for %(alertName)s',\n  },\n  visualization: {\n    startTimeLabel: '%s Start time',\n  },\n  visualizationStateOverlayContent: {\n    noContent: {\n      title: 'No data to display',\n      description: 'There is no data for the given filter',\n    },\n    error: {\n      title: 'Error',\n    },\n    queryCancelledError: 'Query cancelled',\n    networkError: 'Network error',\n  },\n  logQueryPreview: {\n    table: {\n      time: 'Time',\n      message: 'Message',\n    },\n  },\n  lastUpdated: 'Last updated %s ago',\n  thresholdIndicator: 'Threshold indicator',\n  summaryTab: {\n    details: 'Details',\n    drillDownQuery: {\n      AllLogs: 'All Logs',\n      ErrorLogs: 'Error Logs',\n      ErrorLogsWithLogReduce: 'Error Signatures',\n    },\n    associatedLogs: 'Associated Logs',\n    associatedLogsInfo:\n      'Opens logs related to these metadata values in a new tab.',\n    associatedLogsError: 'Something went wrong.',\n    associatedLogsNoResults: {\n      line1: 'No logs linked to this data. Go to the ',\n      line2: 'fields page',\n      line3: ' to set up related logs.',\n    },\n  },\n  alertListTable: {\n    columnNames: {\n      name: 'Name',\n      id: 'ID',\n      severity: 'Severity',\n      status: 'Status',\n      entities: 'Entities',\n      violations: '# of Violations',\n      lastViolation: 'Last Violation',\n      duration: 'Duration',\n      lastUpdated: 'Last Updated',\n    },\n    placeholder: '',\n    summaryLabel: '%s alert(s) currently in active state',\n    contextMenu: {\n      open: 'Open',\n      resolve: 'Resolve',\n      copyLink: 'Copy Link',\n    },\n    alertResolved: 'Alert successfully resolved',\n  },\n};\n","export default {\n  alertTitle: `Alert {alertTitle}`,\n  headings: {\n    triggeredQuery: 'Triggered Query',\n    logsTable: 'Log Messages',\n    metricsTable: 'Time Series',\n    signals: 'Alert Context',\n  },\n  description: {\n    title: 'Description',\n    none: 'None',\n  },\n  open: 'Open',\n  refresh: 'Refresh',\n  signals: {\n    loading: 'Loading',\n    error: {\n      title: 'No context cards available',\n      description: 'We haven’t found any context cards for this alert.',\n      partialError: 'One or more context cards failed to load.',\n    },\n    anomalies: {\n      title: 'Anomalies',\n      subTitle: 'Events of interest that are related to this alert',\n      summaryTitle: 'Entity Information',\n    },\n    logFluctuations: {\n      title: 'Log Fluctuations',\n      subTitle: 'Comparing log activity for this alert between time ranges',\n      summaryTitle: 'Summary Description',\n      summary:\n        'Query results from {startTime} compared to results from {timeRange} earlier.',\n      messages: '{numberOfMessages} messages',\n      type: {\n        new: 'NEW',\n        gone: 'GONE',\n        diff: 'DIFF',\n      },\n    },\n    dimensionalExplanations: {\n      title: 'Dimensional Explanations',\n      subTitle:\n        'Most common key-value pairs found in the triggered query results',\n      summaryTitle: 'Summary Description',\n      getSummaryTweaked: `\n{numberOfKeys, plural,\n  one {Key combination {joinedKeys} occurs}\n  other {Key combinations {joinedKeys} occur}\n} more often in these alert results than all other results\n      `,\n      distributionRemaining: '{distributionCount} (remaining)',\n      distributionTooltip:\n        'These key-value pairs occur in {testCoverage} of the messages in your alert results, and {controlCoverage} of all other messages in your log files.',\n      getKeys: `\n{count, plural,\n  one {# key}\n  other {# keys}\n}\n      `,\n    },\n    gisBenchmarks: {\n      title: 'Benchmark',\n      subTitle: 'Comparative metrics',\n      summaryTitle: 'Entity Information',\n      summary: '{entityDisplayName} has {numberOfDeviations} deviations.',\n    },\n    openInQueries: {\n      newTabTitle: 'DrillDown from Incident {incidentName}',\n    },\n  },\n  insightTypeValue: {\n    Critical: 'Critical',\n    Warning: 'Warning',\n    MissingData: 'Missing Data',\n  },\n  id: 'ID',\n  triggerValue: 'Trigger Value',\n  created: 'Created',\n  duration: 'Duration',\n  insightStatusValue: {\n    Triggered: 'Active',\n    Resolved: 'Resolved',\n  },\n  openMonitor: 'Open Monitor',\n  historyTab: {\n    openInNewTab: 'Open in a new tab',\n    currentlyViewing: 'Currently viewing this alert',\n  },\n  link: {\n    copy: 'Copy Link',\n    copiedToClipboard: 'Link copied to clipboard',\n  },\n  notes: {\n    openButton: 'View Playbook',\n    closeButton: 'Close Playbook',\n    title: 'Playbook',\n    stateOverlayNoContent: {\n      title: 'No data to display',\n      description: 'A playbook has not been included with this monitor',\n    },\n  },\n  resolveAction: {\n    resolve: 'Resolve',\n    resolved: 'Resolved',\n    resolving: 'Resolving...',\n    dialogTitle: 'Resolve alert?',\n    dialogMessage: 'This action cannot be undone',\n    success: 'Alert resolved successfully',\n    error: 'Error occurred when resolving the alert',\n  },\n  openTriggeredQuery: {\n    button: 'Open Triggered Query',\n    newTabTitle: 'DrillDown from Alert {alertName}',\n  },\n  errors: {\n    nothingToSee: 'Nothing to see here',\n    itemFetchError: 'Error',\n    error5xx: 'Error 5xx - could not load page',\n    itemNotFound: 'Alert with the given identifier could not be found',\n    itemCouldNotBeRetrieved: 'This item could not be retrieved',\n    itemNoLongerAvailable:\n      'Alerts older than {numberOfDays} days cannot be viewed',\n    retry: 'Retry',\n  },\n  associatedIncidents: {\n    related: 'Related Alerts',\n    history: 'Monitor History',\n    open: 'Open',\n    lastReport: 'Last report: ',\n    // numberOfAlerts: (alerts: number) =>\n    //   `${alerts} alert${alerts === 1 ? '' : 's'}`,\n    // lastNumberOfAlerts: (alerts: number) =>\n    //   `Last ${alerts} alert${alerts === 1 ? '' : 's'}`,\n    medianDuration: 'Median Duration',\n    noMonitorActivityFor30Days:\n      'There is no monitor activity for the past 30 days.',\n    noMonitorActivityOnSelectedDate:\n      'There was no monitor activity on selected date.',\n    frequency: 'Frequency',\n    showingAlerts: 'Showing {numberOfAlerts} alerts for {date}',\n    alertsNumber: '{numberOfAlerts} alerts',\n    durationTriggered: '{duration} duration, triggered {triggeredAt}',\n    forAlert: 'for {alertName}',\n  },\n  visualization: {\n    startTimeLabel: '{startTime} Start time',\n  },\n  visualizationStateOverlayContent: {\n    noContent: {\n      title: 'No data to display',\n      description: 'There is no data for the given filter',\n    },\n    error: {\n      title: 'Error',\n    },\n    queryCancelledError: 'Query cancelled',\n    networkError: 'Network error',\n  },\n  logQueryPreview: {\n    table: {\n      time: 'Time',\n      message: 'Message',\n    },\n  },\n  lastUpdated: 'Last updated {time} ago',\n  thresholdIndicator: 'Threshold indicator',\n  summaryTab: {\n    details: 'Details',\n    drillDownQuery: {\n      AllLogs: 'All Logs',\n      ErrorLogs: 'Error Logs',\n      ErrorLogsWithLogReduce: 'Error Signatures',\n    },\n    associatedLogs: 'Associated Logs',\n    associatedLogsInfo:\n      'Opens logs related to these metadata values in a new tab.',\n    associatedLogsError: 'Something went wrong.',\n    associatedLogsNoResults: {\n      line1: 'No logs linked to this data. Go to the ',\n      line2: 'fields page',\n      line3: ' to set up related logs.',\n    },\n  },\n  alertListTable: {\n    columnNames: {\n      name: 'Name',\n      id: 'ID',\n      severity: 'Severity',\n      status: 'Status',\n      entities: 'Entities',\n      violations: '# of Violations',\n      lastViolation: 'Last Violation',\n      duration: 'Duration',\n      lastUpdated: 'Last Updated',\n    },\n    placeholder: '',\n    summaryLabel: '{numberOfAlerts} alert(s) currently in active state',\n    contextMenu: {\n      open: 'Open',\n      resolve: 'Resolve',\n      copyLink: 'Copy Link',\n    },\n    alertResolved: 'Alert successfully resolved',\n  },\n};\n","const i18n = {\n  sidePanel: {\n    summary: 'Summary',\n    metadata: 'Metadata',\n    error: 'Span logs',\n    noErrorTitle: 'No log fields found',\n    noErrorDescription: '',\n    spanId: 'Span ID',\n    traceId: 'Trace ID',\n    service: 'Service',\n    application: 'Application',\n    operation: 'Operation',\n    // operationNameForClientKind: (operationName: string) =>\n    //   `${operationName} (client)`,\n    // operationNameForRemoteSpan: (operationName: string) =>\n    //   `${operationName} (remote)`,\n    kind: 'Span kind',\n    parentSpan: 'Parent span',\n    relativeStartTime: 'Relative Start time',\n    startTime: 'Start time',\n    endTime: 'End time',\n    duration: 'Duration',\n    noMetadataTitle: 'No Metadata found',\n    noMetadataDescription:\n      'Inject Metadata into your spans to collect more informations.',\n    errorTitle: 'Something Went Wrong!',\n    errorDescription: \"There's a problem loading your data.\",\n    status: 'Status',\n    criticalPathContribution: 'Critical path contribution',\n    httpMethod: 'HTTP method',\n    httpUrl: 'HTTP URL',\n    httpStatusCode: 'HTTP status code',\n    dbType: 'DB type',\n    dbInstance: 'DB instance',\n    dbStatement: 'DB statement',\n    messageBusDestination: 'Message bus destination',\n    logs: 'Logs',\n    events: 'Span Events',\n    logsSectionInfo:\n      \"Open Log Search in a new tab with a span's attribute as a search filter\",\n    logsSectionInfoLine1:\n      \"Open Log Search in a new tab with a span's attribute as a search filter.\",\n    logsSectionInfoLine2:\n      \"If there's no logs produced for this spanID, results may come back empty.\",\n    logsSectionInfoLine3: 'how to add spanID to the logs. Similar for traces.',\n    learn: 'Learn',\n    entityInspectorLogsLink: 'Related Logs - Infrastructure',\n    // openTaggedLogs: (arg0: string) => `Open logs tagged with ${arg0}`,\n    textCopiedToClipboard: 'Copied to Clipboard',\n    metadataGroups: {\n      k8s: 'Kubernetes',\n      sumo: 'Sumo Logic',\n      others: '',\n    },\n    // drillDownTitle: (traceId: string) => `Drill-down from Trace ID #${traceId}`,\n    copyToClipboardIconTooltip: 'Copy to Clipboard',\n    filterSpansIconTooltip: 'Highlight spans which contain this tag',\n    remoteSpan: '(remote span)',\n    approximate: 'Approximate timing derived from parent span',\n    remoteSpanInfo:\n      \"Remote span is artificially created based on received client span, that doesn't have the corresponding server span. It represents contribution of remote, not instrumented but existing service to end to end duration of the trace also providing ability to drill-down to metrics of that service (Infrastructure tab).\",\n  },\n  servicesContribution: {\n    title: 'Critical path contribution by service',\n    spans: 'Spans',\n    clickToShowSpans: 'Click to show all spans from this service',\n    clickToHideSpans: 'Click to hide all spans from this service',\n    otherServices: 'Other',\n    hideAll: 'Hide all services',\n    showAll: 'Show all services',\n  },\n  spansFiltering: {\n    selectorLabel: 'Filters',\n    // spansNumberForTagNameAggregation: (count: number) =>\n    //   `Number of spans containing this tag: <b>${count}</b>.`,\n    // valuesNumberForTagNameAggregation: (count: number) =>\n    //   `Number of different values of this tag: <b>${count}</b>.`,\n    // spansNumberForTagNameAndValueAggregation: (\n    //   tagName: string,\n    //   tagValue: string,\n    //   count: number,\n    // ) =>\n    //   `Number of spans containing the tag with name <b>${tagName}</b> and value <b>${tagValue}</b>: <b>${count}</b>.`,\n    filterSelectorHintText:\n      'Filter for spans that match certain metadata tag values, so you can highlight spans that match the criteria.',\n    applyFiltersBtn: 'Apply filters',\n    tracingFields: 'Tracing fields',\n    otherFields: 'Others',\n  },\n  errorSpansOnlyToggle: 'Error Spans Only',\n  hasUpdates: 'New data is available to display, click to refresh',\n  // totalNumberOfSpans: (number: number) =>\n  //   `<strong>${number}</strong> Total Spans`,\n  // numberOfDisplayedSpans: (number: number) =>\n  //   `<strong>${number}</strong> Spans displayed`,\n  // tooltipMessageSpansLimitExceeded: (limit: number) =>\n  //   `The number of spans which can be visualised has exceeded the limit (${limit}).`,\n};\n\nexport default i18n;\n","const i18n = {\n  sidePanel: {\n    summary: 'Summary',\n    metadata: 'Metadata',\n    error: 'Span logs',\n    noErrorTitle: 'No log fields found',\n    noErrorDescription: '',\n    spanId: 'Span ID',\n    traceId: 'Trace ID',\n    service: 'Service',\n    application: 'Application',\n    operation: 'Operation',\n    operationNameForClientKind: '{operationName} (client)',\n    operationNameForRemoteSpan: '{operationName} (remote)',\n    kind: 'Span kind',\n    parentSpan: 'Parent span',\n    relativeStartTime: 'Relative Start time',\n    startTime: 'Start time',\n    endTime: 'End time',\n    duration: 'Duration',\n    noMetadataTitle: 'No Metadata found',\n    noMetadataDescription:\n      'Inject Metadata into your spans to collect more informations.',\n    errorTitle: 'Something Went Wrong!',\n    errorDescription: \"There's a problem loading your data.\",\n    status: 'Status',\n    criticalPathContribution: 'Critical path contribution',\n    httpMethod: 'HTTP method',\n    httpUrl: 'HTTP URL',\n    httpStatusCode: 'HTTP status code',\n    dbType: 'DB type',\n    dbInstance: 'DB instance',\n    dbStatement: 'DB statement',\n    messageBusDestination: 'Message bus destination',\n    logs: 'Logs',\n    events: 'Span Events',\n    logsSectionInfo:\n      \"Open Log Search in a new tab with a span's attribute as a search filter\",\n    logsSectionInfoLine1:\n      \"Open Log Search in a new tab with a span's attribute as a search filter.\",\n    logsSectionInfoLine2:\n      \"If there's no logs produced for this spanID, results may come back empty.\",\n    logsSectionInfoLine3: 'how to add spanID to the logs. Similar for traces.',\n    learn: 'Learn',\n    entityInspectorLogsLink: 'Related Logs - Infrastructure',\n    openTaggedLogs: 'Open logs tagged with {arg0}',\n    textCopiedToClipboard: 'Copied to Clipboard',\n    metadataGroups: {\n      k8s: 'Kubernetes',\n      sumo: 'Sumo Logic',\n      others: '',\n    },\n    drillDownTitle: 'Drill-down from Trace ID #{traceId}',\n    copyToClipboardIconTooltip: 'Copy to Clipboard',\n    filterSpansIconTooltip: 'Highlight spans which contain this tag',\n    remoteSpan: '(remote span)',\n    approximate: 'Approximate timing derived from parent span',\n    remoteSpanInfo:\n      \"Remote span is artificially created based on received client span, that doesn't have the corresponding server span. It represents contribution of remote, not instrumented but existing service to end to end duration of the trace also providing ability to drill-down to metrics of that service (Infrastructure tab).\",\n  },\n  servicesContribution: {\n    title: 'Critical path contribution by service',\n    spans: 'Spans',\n    clickToShowSpans: 'Click to show all spans from this service',\n    clickToHideSpans: 'Click to hide all spans from this service',\n    otherServices: 'Other',\n    hideAll: 'Hide all services',\n    showAll: 'Show all services',\n  },\n  spansFiltering: {\n    selectorLabel: 'Filters',\n    spansNumberForTagNameAggregation:\n      'Number of spans containing this tag: <b>{count}</b>.',\n    valuesNumberForTagNameAggregation:\n      'Number of different values of this tag: <b>{count}</b>.',\n    spansNumberForTagNameAndValueAggregation:\n      'Number of spans containing the tag with name <b>{tagName}</b> and value <b>{tagValue}</b>: <b>{count}</b>.',\n    filterSelectorHintText:\n      'Filter for spans that match certain metadata tag values, so you can highlight spans that match the criteria.',\n    applyFiltersBtn: 'Apply filters',\n    tracingFields: 'Tracing fields',\n    otherFields: 'Others',\n  },\n  errorSpansOnlyToggle: 'Error Spans Only',\n  hasUpdates: 'New data is available to display, click to refresh',\n  totalNumberOfSpans: '<strong>{number}</strong> Total Spans',\n  numberOfDisplayedSpans: '<strong>{number}</strong> Spans displayed',\n  tooltipMessageSpansLimitExceeded:\n    'The number of spans which can be visualised has exceeded the limit ({limit}).',\n};\n\nexport default i18n;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { IntlProvider } from 'react-intl';\nimport './index.css';\nimport App from './App';\nimport icpOrigEnI18n from './i18n/icp.orig.en.i18n';\nimport icpIcuEnI18n from './i18n/icp.icu.en.i18n';\nimport traceDetailsOrigEnI18n from './i18n/traceDetails.orig.en.i18n';\nimport traceDetailsIcuEnI18n from './i18n/traceDetails.icu.en.i18n';\nimport { flattenMessages } from './utils';\n\nReactDOM.render(\n  <React.StrictMode>\n    <IntlProvider\n      locale={'en'}\n      messages={flattenMessages({\n        icpOrigEnI18n,\n        icpIcuEnI18n,\n        traceDetailsOrigEnI18n,\n        traceDetailsIcuEnI18n,\n      })}\n    >\n      <App />\n    </IntlProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// react-intl V2+ doesn't support nested objects\n// So we need to flatten the messages object before using in the code\n// source: https://formatjs.io/docs/react-intl/upgrade-guide-2x/#flatten-messages-object\nexport function flattenMessages(\n  nestedMessages: Record<string, any>,\n  prefix = '',\n) {\n  if (nestedMessages === null) {\n    return {};\n  }\n  return Object.keys(nestedMessages).reduce((messages, key) => {\n    const value = nestedMessages[key];\n    const prefixedKey = prefix ? `${prefix}.${key}` : key;\n\n    if (typeof value === 'string') {\n      Object.assign(messages, { [prefixedKey]: value });\n    } else {\n      Object.assign(messages, flattenMessages(value, prefixedKey));\n    }\n\n    return messages;\n  }, Object.create(null));\n}\n"],"sourceRoot":""}